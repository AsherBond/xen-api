# OASIS_START
# DO NOT EDIT (digest: a73f4b30e8ba1c44799b53b5f540eb4d)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library xenops
"lib/xenops.cmxs": use_xenops
<lib/*.ml{,i}>: pkg_uuidm
<lib/*.ml{,i}>: pkg_threads
<lib/*.ml{,i}>: pkg_xmlm
<lib/*.ml{,i}>: pkg_cohttp
<lib/*.ml{,i}>: pkg_uri
<lib/*.ml{,i}>: pkg_rpc
<lib/*.ml{,i}>: pkg_rpc.syntax
# Executable xn
<cli/xn.{native,byte}>: use_xenops
<cli/xn.{native,byte}>: pkg_uuidm
<cli/xn.{native,byte}>: pkg_threads
<cli/xn.{native,byte}>: pkg_xmlm
<cli/xn.{native,byte}>: pkg_cohttp
<cli/xn.{native,byte}>: pkg_uri
<cli/xn.{native,byte}>: pkg_rpc
<cli/xn.{native,byte}>: pkg_rpc.syntax
<cli/*.ml{,i}>: use_xenops
<cli/*.ml{,i}>: pkg_uuidm
<cli/*.ml{,i}>: pkg_threads
<cli/*.ml{,i}>: pkg_xmlm
<cli/*.ml{,i}>: pkg_cohttp
<cli/*.ml{,i}>: pkg_uri
<cli/*.ml{,i}>: pkg_rpc
<cli/*.ml{,i}>: pkg_rpc.syntax
<cli/xn.{native,byte}>: custom
# Executable xenopsd_xen
<xen/xenopsd_xen_main.{native,byte}>: use_xenops
<xen/xenopsd_xen_main.{native,byte}>: pkg_uuidm
<xen/xenopsd_xen_main.{native,byte}>: pkg_threads
<xen/xenopsd_xen_main.{native,byte}>: pkg_xmlm
<xen/xenopsd_xen_main.{native,byte}>: pkg_cohttp
<xen/xenopsd_xen_main.{native,byte}>: pkg_uri
<xen/xenopsd_xen_main.{native,byte}>: pkg_rpc
<xen/xenopsd_xen_main.{native,byte}>: pkg_rpc.syntax
<xen/*.ml{,i}>: use_xenops
<xen/*.ml{,i}>: pkg_uuidm
<xen/*.ml{,i}>: pkg_threads
<xen/*.ml{,i}>: pkg_xmlm
<xen/*.ml{,i}>: pkg_cohttp
<xen/*.ml{,i}>: pkg_uri
<xen/*.ml{,i}>: pkg_rpc
<xen/*.ml{,i}>: pkg_rpc.syntax
<xen/xenopsd_xen_main.{native,byte}>: custom
# Executable xenopsd_simulator
<simulator/xenops_simulator_main.{native,byte}>: use_xenops
<simulator/xenops_simulator_main.{native,byte}>: pkg_uuidm
<simulator/xenops_simulator_main.{native,byte}>: pkg_threads
<simulator/xenops_simulator_main.{native,byte}>: pkg_xmlm
<simulator/xenops_simulator_main.{native,byte}>: pkg_cohttp
<simulator/xenops_simulator_main.{native,byte}>: pkg_uri
<simulator/xenops_simulator_main.{native,byte}>: pkg_rpc
<simulator/xenops_simulator_main.{native,byte}>: pkg_rpc.syntax
<simulator/*.ml{,i}>: use_xenops
<simulator/*.ml{,i}>: pkg_uuidm
<simulator/*.ml{,i}>: pkg_threads
<simulator/*.ml{,i}>: pkg_xmlm
<simulator/*.ml{,i}>: pkg_cohttp
<simulator/*.ml{,i}>: pkg_uri
<simulator/*.ml{,i}>: pkg_rpc
<simulator/*.ml{,i}>: pkg_rpc.syntax
<simulator/xenops_simulator_main.{native,byte}>: custom
# Executable test
<test/test.{native,byte}>: use_xenops
<test/test.{native,byte}>: pkg_oUnit
<test/test.{native,byte}>: pkg_unix
<test/test.{native,byte}>: pkg_uuidm
<test/test.{native,byte}>: pkg_threads
<test/test.{native,byte}>: pkg_xmlm
<test/test.{native,byte}>: pkg_cohttp
<test/test.{native,byte}>: pkg_uri
<test/test.{native,byte}>: pkg_rpc
<test/test.{native,byte}>: pkg_rpc.syntax
<test/*.ml{,i}>: use_xenops
<test/*.ml{,i}>: pkg_oUnit
<test/*.ml{,i}>: pkg_unix
<test/*.ml{,i}>: pkg_uuidm
<test/*.ml{,i}>: pkg_threads
<test/*.ml{,i}>: pkg_xmlm
<test/*.ml{,i}>: pkg_cohttp
<test/*.ml{,i}>: pkg_uri
<test/*.ml{,i}>: pkg_rpc
<test/*.ml{,i}>: pkg_rpc.syntax
<test/test.{native,byte}>: custom
# OASIS_STOP
<*/*>: syntax_camlp4o
<lib/device_number.ml>: pkg_rpc.syntax
<lib/xenops_interface.ml>: pkg_rpc.idl
<cli/xn_cfg_types.ml>: pkg_rpc.syntax
