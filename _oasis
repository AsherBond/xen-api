OASISFormat: 0.2
Name:        message_switch
Version:     1.0
Synopsis:    A simple store-and-forward message switch
Authors:     see CREDITS.md
License:     LGPL-2.1 with OCaml linking exception
Plugins:     META (0.2)
BuildTools:  ocamlbuild

Flag tests
  Description:        Build and run tests
  Default:            true

Library message_switch
  CompiledObject:     best
  Path:               core
  Findlibname:        message_switch
  Modules:            Protocol
  BuildDepends:       cohttp,rpclib,rpclib.json,rpclib.syntax,re,re.str

Library message_switch_lwt
  CompiledObject:     best
  Path:               core
  Findlibparent:      message_switch
  Findlibname:        lwt
  Modules:            Protocol_lwt
  BuildDepends:       lwt,lwt.unix,lwt.syntax,cohttp,cohttp.lwt,rpclib,rpclib.json,rpclib.syntax,message_switch

Library message_switch_unix
  CompiledObject:     best
  Path:               core
  Findlibparent:      message_switch
  Findlibname:        unix
  Modules:            Protocol_unix, Protocol_unix_scheduler
  BuildDepends:       unix,threads,cohttp,rpclib,rpclib.json,rpclib.syntax,message_switch

Executable m_cli
  CompiledObject:     best
  Path:               cli
  MainIs:             main.ml
  Custom:             true
  Install:            false
  BuildDepends:       message_switch, message_switch.unix, cmdliner

Executable link_test
  CompiledObject:     best
  Path:               core_test
  MainIs:             link_test_main.ml
  Build$:             flag(tests)
  Custom:             true
  Install:            false
  BuildDepends:       message_switch, message_switch.lwt, lwt, lwt.unix, lwt.syntax, cohttp, cohttp.lwt

Executable client
  CompiledObject:     best
  Path:               core_test
  MainIs:             client_main.ml
  Build$:             flag(tests)
  Custom:             true
  Install:            false
  BuildDepends:       message_switch, message_switch.lwt, lwt, lwt.unix, lwt.syntax, cohttp, cohttp.lwt

Executable client_unix
  CompiledObject:     best
  Path:               core_test
  MainIs:             client_unix_main.ml
  Build$:             flag(tests)
  Custom:             true
  Install:            false
  BuildDepends:       message_switch, message_switch.unix, cohttp

Executable server
  CompiledObject:     best
  Path:               core_test
  MainIs:             server_main.ml
  Build$:             flag(tests)
  Custom:             true
  Install:            false
  BuildDepends:       message_switch, message_switch.lwt, lwt, lwt.unix, lwt.syntax, cohttp, cohttp.lwt

Executable server_unix
  CompiledObject:     best
  Path:               core_test
  MainIs:             server_unix_main.ml
  Build$:             flag(tests)
  Custom:             true
  Install:            false
  BuildDepends:       message_switch, message_switch.unix

Executable switch
  CompiledObject:     best
  Path:               switch
  MainIs:             switch.ml
  Custom:             true
  Install:            false
  BuildDepends:       message_switch, message_switch.lwt, xenstore, xenstore.server, lwt, lwt.unix, lwt.syntax, cohttp, cohttp.lwt

