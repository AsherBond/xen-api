#!/usr/bin/python
#
# Copyright (c) Citrix Systems 2007-2011
# Author: Gianni Tedesco and Dave Scott
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation; version 2.1 only. with the special
# exception on linking described in file LICENSE.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

import subprocess

def enable_core_dumps():
	from resource import getrlimit, RLIMIT_CORE, setrlimit

	limit = 64 * 1024 * 1024
	oldlimits = getrlimit(RLIMIT_CORE)
	setrlimit(RLIMIT_CORE, (limit, oldlimits[1]))
	return limit

def main(argv):
	import os

	qemu_env = os.environ
	qemu_dm = '/usr/lib/xen/bin/qemu-dm' 
	if not os.path.exists(qemu_dm):
		qemu_dm = '/usr/lib/xen-4.1/bin/qemu-dm'
	domid = int(argv[1])
	qemu_args = ['qemu-dm-%d'%domid] + argv[2:]

	print "qemu-dm-wrapper in python:"
	print "Using domid: %d" % domid
	print "Arguments: %s" % " ".join(argv[1:])
	print "everything else is from qemu-dm:"

	core_dump_limit = enable_core_dumps()
	print "core dump limit: %d" % core_dump_limit

	subprocess.call(["xenstore-write", "/local/domain/%d/qemu-pid" % domid, "%d" % os.getpid()])

	os.dup2(1, 2)
	os.execve(qemu_dm, qemu_args, qemu_env)

if __name__ == '__main__':
	from sys import argv
	raise SystemExit, main(argv)
